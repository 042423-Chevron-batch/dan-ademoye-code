name: Continuous Integration
# The main point of Continuous Integration is to ensure that the new code that is about to be merged
# or the new code that has been pushed Won't Break Your Application

# This on clause specifies which event this pipeline/workflow will run
on: 
  push: 
    branches: ["main"] #run whenever there is a push event to main branch
  pull_request:
    branches: ["main"] # run whenever there is a pull request to main branch
  workflow_dispatch: # you can manually trigger this workflow
  
jobs:
# This is a job that grabs ubuntu VM and runs "echo 'Hello, World!'"
  build:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: TemplateApi
    steps:
    - name: say hello
      run: echo "Hello, World!"

    - name: checkout git repo
      uses: actions/checkout@v3

    - name: Make sure it builds
      run: dotnet build ${{ env.WORKING_DIR }}

    - name: dotnet publish
      run: dotnet publish ${{ env.WORKING_DIR }} -c Release -o myapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ademoyeapi'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D1036E737B70482692D72BE58BF71711 }}
          package: .
